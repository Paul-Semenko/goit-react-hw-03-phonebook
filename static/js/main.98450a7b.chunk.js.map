{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.jsx","index.js","components/ContactForm/Style.module.css","components/Filter/style.module.css","components/ContactList/style.module.css"],"names":["ContactForm","nameInputId","uuid","numberInputId","state","name","number","handleInputChange","event","currentTarget","value","setState","handleSubmit","e","preventDefault","obj","props","onSubmit","reset","this","className","style","form","htmlFor","form__title","type","pattern","title","required","onChange","id","form__input","form__button","Component","ContactList","contacts__list","contacts","map","el","contacts__item","onClick","handleRemove","contact__button","Filter","filter__title","autoComplete","handleChange","filter__input","App","filter","formSubmitHandler","find","alert","prevState","handleFilter","arr","toLowerCase","split","i","length","match","regExp","RegExp","target","elem","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","contacts__title","ReactDOM","render","StrictMode","document","getElementById","querySelector","module","exports"],"mappings":"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","file":"static/js/main.98450a7b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuid } from \"uuid\";\r\nimport style from './Style.module.css';\r\n\r\n\r\nexport class ContactForm extends Component{\r\n    nameInputId = uuid();\r\n    numberInputId = uuid();\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    };\r\n \r\nhandleInputChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value, });\r\n    \r\n    };\r\n    \r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        \r\n        const obj = {\r\n            name: this.state.name,\r\n            number: this.state.number\r\n        };\r\n\r\n        this.props.onSubmit(obj);\r\n      this.reset();\r\n        \r\n    };\r\n\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            name: '',\r\n            number: ''\r\n        });\r\n    };\r\n       \r\n    render() {\r\n        const { name, number } = this.state;\r\n        const { nameInputId, numberInputId, handleInputChange, handleSubmit } = this;\r\n        return (\r\n            <form onSubmit={handleSubmit} className={style.form}>\r\n                <h1>Phonebook</h1>\r\n          <label htmlFor={nameInputId} className={style.form__title}>Name\r\n        <input\r\n  type=\"text\"\r\n  name=\"name\"\r\n  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        value={name}\r\n                        onChange={handleInputChange}\r\n                        id={nameInputId}\r\n                        className={style.form__input}\r\n                        \r\n          />\r\n          </label>\r\n          <label htmlFor={numberInputId} className={style.form__title}>Number\r\n          <input\r\n  type=\"tel\"\r\n  name=\"number\"\r\n  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n  title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    value={number}\r\n                        onChange={handleInputChange}\r\n                        id={numberInputId}\r\n                        className={style.form__input}\r\n/>\r\n         </label> \r\n          <button className={style.form__button}>Add contact</button>\r\n        </form>\r\n        );\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.number,\r\n    handleInputChange: PropTypes.func,\r\n    handleSubmit: PropTypes.func,\r\n}","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport style from './style.module.css';\r\n\r\n\r\nexport  default class ContactList extends Component {\r\n  render() {\r\n    return (\r\n      <ul className={style.contacts__list} >\r\n        {this.props.contacts.map((el) => (\r\n          <li key={el.id} className={style.contacts__item}>\r\n            {el.name} : {el.number}\r\n           <button\r\n              type=\"button\"\r\n              id={el.id}\r\n            onClick={this.props.handleRemove}\r\n                    className={style.contact__button}\r\n            >\r\n              Delete\r\n            </button>\r\n            </li>            \r\n        ))}\r\n            \r\n        </ul>\r\n         \r\n    );\r\n  }\r\n}\r\n     \r\n\r\n\r\n\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array,\r\n    handleRemove: PropTypes.func,\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport style from './style.module.css';\r\n\r\nexport default class Filter extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <label htmlFor=\"search\" className={style.filter__title}>\r\n          Find contacts by name\r\n        \r\n        <input\r\n          \r\n                    autoComplete=\"off\"\r\n                    id=\"search\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]\"\r\n                    onChange={(e) => {\r\n                        e.preventDefault();\r\n                        this.props.handleChange(e);\r\n                    }}\r\n                    className={style.filter__input}\r\n            ></input>\r\n            </label>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nFilter.propTypes = {\r\n    handleChange: PropTypes.func,\r\n}\r\n\r\n","import { Component } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport style from './components/Filter/style.module.css';\nimport { ContactForm } from \"./components/ContactForm/ContactForm\";\nimport ContactList  from './components/ContactList/ContactList';\nimport Filter from \"./components/Filter/Filter\";\n\n\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    \n  }\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n      \n    }\n\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n   \n  }\n\n  formSubmitHandler = ({ name, number }) => {\n    if (!this.state.contacts.find((el) => el.name === name)) {\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, { name, number, id: uuid() }],\n      }));\n    } else {\n      alert(`${name} is already in contacts`);\n    }\n  };\n  \n  \n\nhandleFilter = () => {\n    return this.state.contacts.filter((el) => {\n      const arr = el.name.toLowerCase().split(\" \");\n\n      for (let i = 0; i < arr.length; i++) {\n        if (arr[i].toLowerCase().match(this.state.filter) !== null) {\n          return true;\n        }\n      }\n      return false;\n    });\n};\n  \n  \nhandleChange = (e) => {\n    const regExp = new RegExp(`^${e.target.value.toLowerCase()}`);\n    this.setState({\n      filter: regExp,\n    });\n  };\n\n\n  \n\n handleRemove = (e) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((elem) => elem.id !== e.target.id),\n    }));\n  };\n\n\n  render() {\n    const { formSubmitHandler, handleChange, handleFilter, handleRemove } = this;\n    return (\n      <div>\n        <ContactForm\n          onSubmit={formSubmitHandler}\n        />\n        <h2 className={style.contacts__title}>Contacts</h2>\n        <Filter handleChange={handleChange} />\n        <ContactList contacts={handleFilter()}\n          handleRemove={handleRemove}\n          />\n      </div>\n    );\n\n  }\n}\n\n    \n  \n\n\nexport default App","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Style_form__3_R5f\",\"form__title\":\"Style_form__title__2UP3s\",\"form__input\":\"Style_form__input__3yY_k\",\"form__button\":\"Style_form__button__19uAi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__title\":\"style_filter__title__3r6rL\",\"filter__input\":\"style_filter__input__2qa5r\",\"contacts__title\":\"style_contacts__title__1wARO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__button\":\"style_contact__button__2Ej49\",\"contacts__list\":\"style_contacts__list__2skGt\",\"contacts__item\":\"style_contacts__item__31ctH\"};"],"sourceRoot":""}